# MHT API Infrastructure Configuration - STAGING
# Environment-specific variables for staging deployment

# Basic Infrastructure Configuration
region              = "us-west-2"
ami                 = "ami-0c55b159cbfafe1f0"  # Ubuntu 20.04 LTS
instance_type       = "t2.micro"
instance_count      = 1                        # Reduced for staging
instance_name       = "mht-api"
key_name            = "my-aws-keypair"
environment         = "staging"

# Container Configuration
backend_image       = "mycompany/backend:staging"
front_end_image     = "mycompany/frontend:staging"
backend_port        = 8080
front_end_port      = 3000
backend_container_name   = "backend"
front_end_container_name = "frontend"

# Network Configuration
vpc_cidr            = "10.1.0.0/16"           # Different CIDR for staging
subnet_cidrs        = ["10.1.1.0/24", "10.1.2.0/24"]
availability_zones  = ["us-west-2a", "us-west-2b"]

# Domain and Route53 Configuration
hosted_zone_name    = "amygdalas.com"
route53_zone_id     = "Z0286437KXYMILBB4R1F"
dns_name            = "staging-api.amygdalas.com"  # Staging subdomain
certbot_email       = "admin@amygdalas.com"
enable_load_balancer = true

# Zero-Downtime Deployment Configuration
blue_green_enabled = false
active_target_group = "blue"
enable_rollback = true
rollback_timeout_minutes = 5

# External Validation and Discord Notifications
skip_deployment_validation = false
enable_discord_notifications = false
discord_webhook_url = "REPLACE_WITH_YOUR_DISCORD_WEBHOOK_URL"

##############################
# S3 Storage Configuration - STAGING
##############################

# Basic S3 Configuration
s3_bucket_name_suffix = "staging-data"
s3_use_case          = "staging-analytics"

# Data Organization
s3_primary_data_prefix      = "staging-data/"
s3_secondary_data_prefixes  = [
  "staging-events/",
  "staging-metrics/", 
  "staging-logs/"
]

# Cost Optimization (reduced for staging)
enable_s3_intelligent_tiering = false         # Disabled for staging
enable_s3_lifecycle_policy   = true
s3_lifecycle_transitions = [
  {
    days          = 7                          # Faster transitions in staging
    storage_class = "STANDARD_IA"
  },
  {
    days          = 30  
    storage_class = "GLACIER"
  }
]

# Security Configuration
s3_versioning_enabled = true
s3_kms_key_id        = null
s3_trusted_accounts  = []

# IAM Role Configuration
create_s3_read_only_role = false
create_s3_admin_role     = false

# Temporary Data Configuration
s3_temp_prefixes = {
  "temp" = {
    prefix          = "temp"
    expiration_days = 1                        # Faster cleanup in staging
  }
  "staging" = {
    prefix          = "staging" 
    expiration_days = 1
  }
}

# Monitoring and Examples
setup_s3_athena_partitions = false           # Disabled for staging
enable_s3_access_logging     = false         # Reduced logging in staging
s3_log_retention_days       = 7

##############################
# SQS Processing Configuration - STAGING
##############################

# Basic SQS Configuration
sqs_use_case = "staging-processing"

# Queue Configurations (reduced settings for staging)
sqs_queue_configurations = {
  feedback = {
    fifo_queue                  = true
    content_based_deduplication = false
    description                 = "Staging feedback processing queue"
    message_retention_seconds   = 86400      # 1 day for staging
    visibility_timeout_seconds  = 300
    max_message_size           = 262144
    delay_seconds              = 0
    receive_wait_time_seconds  = 20
    enable_dlq                 = true
    max_receive_count          = 3
    alarm_max_depth            = 50          # Lower thresholds for staging
  }
  emails = {
    fifo_queue                  = true
    content_based_deduplication = false
    description                 = "Staging email processing queue"
    message_retention_seconds   = 86400
    visibility_timeout_seconds  = 300
    max_message_size           = 262144
    delay_seconds              = 0
    receive_wait_time_seconds  = 20
    enable_dlq                 = true
    max_receive_count          = 3
    alarm_max_depth            = 100
  }
  analytics = {
    fifo_queue                  = true
    content_based_deduplication = true
    description                 = "Staging analytics processing queue"
    message_retention_seconds   = 86400
    visibility_timeout_seconds  = 120
    max_message_size           = 262144
    delay_seconds              = 0
    receive_wait_time_seconds  = 20
    enable_dlq                 = true
    max_receive_count          = 3
    alarm_max_depth            = 200
  }
}

# Advanced Configuration Options
enable_sqs_encryption = false               # Disabled for staging
sqs_kms_key_id       = null

# IAM Role Configuration
create_sqs_api_role           = true
create_sqs_worker_role        = true
create_sqs_instance_profiles  = true

# CloudWatch Monitoring (reduced for staging)
enable_sqs_cloudwatch_alarms   = false     # Disabled for staging
enable_sqs_operations_logging  = false     # Disabled for staging
sqs_log_retention_days        = 7
sqs_cloudwatch_alarm_actions  = []

# S3 Integration
enable_sqs_s3_integration = true

# Cost Optimization
enable_sqs_cost_allocation_tags = true
sqs_cost_center                = "mht-api-staging"
sqs_project_code              = "mht-2025-staging"